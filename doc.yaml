openapi: 3.0.0
info:
  version: '1'
  title: Delilah Resto
  description: Api para  la gestion de pedidos

servers:
  - description: Mi servidor local
    url: http://localhost:3000  
tags:
  - name: users
    description: Gestion de usuarios 
  - name: products
    description: Gestion de productos
  - name: orders 
    description: Gestion de pedidos
  - name: paymentMethods 
    description: Gestion de metodos de pago

paths:

#USER

  /users:
    post:
      tags:
        - users
      summary: Registra un nuevo usuario
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/userRegister"
        required: true
      responses:
        201:
          $ref: '#/components/responses/userCreated'
        400:
          $ref: '#/components/responses/userRegisterValidation1'
        422:
          $ref: '#/components/responses/userRegisterValidation2'

  /users/login:
    post:
      tags:
        - users
      summary: El usuario puede iniciar sesion
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/userLogin'
        required: true
      responses:
        200:
          $ref: '#/components/responses/userLogin'
        400:
          $ref: '#/components/responses/userLoginInvalidEmail'
        422:
          $ref: '#/components/responses/userLoginInvalidPassword'

  /users/{idUser}:
    put:      
      security:
      - bearerAuth: []
      tags:
        - users
      summary: El usuario puede asignarse como admin
      parameters:
        - $ref: '#/components/parameters/idUser'
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/updateUserRol'
        required: true
      responses:
        200:
          $ref: '#/components/responses/changeRolUser'
        400:
          $ref: '#/components/responses/invalidUserId'
        401:
          $ref: '#/components/responses/invalidToken'
        403:
          $ref: '#/components/responses/unauthorizedIdUser'

  /users/{idUser}/address:
    get:      
      security:
      - bearerAuth: []
      tags:
        - users
      summary: El usuario puede listar sus direcciones
      parameters:
        - $ref: '#/components/parameters/idUser'
      responses:
        200:
          $ref: '#/components/responses/addressList'
        400:
          $ref: '#/components/responses/invalidUserId'
        401:
          $ref: '#/components/responses/invalidToken'
        403:
          $ref: '#/components/responses/unauthorizedIdUser'
    post:
      security:
      - bearerAuth: []
      tags:
        - users
      summary: El usuario puede agregar una direccion
      parameters:
        - $ref: '#/components/parameters/idUser'
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/newAddress'
        required: true
      responses:
        201:
          $ref: '#/components/responses/newAddress'
        400:
          $ref: '#/components/responses/addressValidation'
        401:
          $ref: '#/components/responses/invalidToken'
        403:
          $ref: '#/components/responses/unauthorizedIdUser'

  /users/{idUser}/disabled:
    put:
      security:
      - bearerAuth: []
      tags:
        - users
      summary: El admin puede deshabilitar un usuario
      parameters:
        - $ref: '#/components/parameters/idUser'
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/disabledUser'
        required: true
      responses:
        200:
          $ref: '#/components/responses/disabledUSer'
        401:
          $ref: '#/components/responses/invalidToken'
        403:
          $ref: '#/components/responses/adminValidation'

#PRODUCTS

  /products:
    get:      
      security:
      - bearerAuth: []
      tags:
        - products
      summary: El usuario puede listar los productos
      responses:
        200:
          $ref: '#/components/responses/listProducts'
        401:
          $ref: '#/components/responses/invalidToken'
    post:
      security:
      - bearerAuth: []
      tags:
        - products
      summary: El admin puede crear productos
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/addProduct'
        required: true
      responses:
        201:
          $ref: '#/components/responses/productAdd'
        400:
          $ref: '#/components/responses/productAddValidation'
        401:
          $ref: '#/components/responses/invalidToken'
        403:
          $ref: '#/components/responses/adminValidation'

  /products/{idProduct}:
    put:
      security:
      - bearerAuth: []
      tags:
        - products
      summary: El admin puede modificar un producto
      parameters:
        - $ref: '#/components/parameters/idProduct'
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/addProduct'
        required: true
      responses:
        200:
          $ref: '#/components/responses/productAdd'
        400:
          $ref: '#/components/responses/productAddValidation'
        401:
          $ref: '#/components/responses/invalidToken'
        403:
          $ref: '#/components/responses/adminValidation'
    delete:
      security:
      - bearerAuth: []
      tags:
        - products
      summary: El admin puede eliminar un producto
      parameters:
        - $ref: '#/components/parameters/idProduct'
      responses:
        200:
          $ref: '#/components/responses/productDelete'
        400:
          $ref: '#/components/responses/invalidProductId'
        401:
          $ref: '#/components/responses/invalidToken'
        403:
          $ref: '#/components/responses/adminValidation'

  /products/{idProduct}/price:
    put:
      security:
      - bearerAuth: []
      tags:
        - products
      summary: El admin puede modificar el precio de un producto
      parameters:
        - $ref: '#/components/parameters/idProduct'
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/modifyPriceProduct'
        required: true
      responses:
        200:
          $ref: '#/components/responses/productNewPrice'
        400:
          $ref: '#/components/responses/invalidProductId'
        401:
          $ref: '#/components/responses/invalidToken'
        403:
          $ref: '#/components/responses/adminValidation'

#ORDERS

  /orders:
    get:
      security:
      - bearerAuth: []
      tags:
        - orders
      summary: Muestra el listado de pedidos que realizo el usuario
      responses:
        200:
          $ref: '#/components/responses/listOrders'
        401:
          $ref: '#/components/responses/invalidToken' 
    post:
      security:
      - bearerAuth: []
      tags:
        - orders
      summary: El usuario puede realizar un pedido
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/newOrder'
        required: true
      responses:
        201:
          $ref: '#/components/responses/ordertAdd'
        400:
          $ref: '#/components/responses/invalidDataOrder'
        401:
          $ref: '#/components/responses/invalidToken'

  /orders/{idOrder}:
    put:
      security:
      - bearerAuth: []
      tags:
        - orders
      summary: El usuario puede modificar su pedido
      parameters:
        - $ref: '#/components/parameters/idOrder'
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/modifyOrder'
        required: true
      responses:
        200:
          $ref: '#/components/responses/modifyOrder'
        400:
          $ref: '#/components/responses/invalidDataOrder'
        401:
          $ref: '#/components/responses/invalidToken'
        422:
          $ref: '#/components/responses/modifyOrderValidation'
    delete:
      security:
      - bearerAuth: []
      tags:
        - orders
      summary: El ususario puede eliminar productos de su orden mientras el estado sea pendiente
      parameters:
        - $ref: '#/components/parameters/idOrder'
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/deleteProductOrder'
        required: true
      responses:
        200:
          $ref: '#/components/responses/deleteProductOrder'
        400:
          $ref: '#/components/responses/invalidIdOrder'
        401:
          $ref: '#/components/responses/invalidToken'
        422:
          $ref: '#/components/responses/modifyOrderValidation'

  /orders/{idOrder}/confirmation:
    put:
      security:
      - bearerAuth: []
      tags:
        - orders
      summary: El usuario puede confirmar su pedido
      parameters:
        - $ref: '#/components/parameters/idOrder'
      responses:
        200:
          $ref: '#/components/responses/modifyOrderConfirmation'
        400:
          $ref: '#/components/responses/modifyOrderValidation'
        401:
          $ref: '#/components/responses/invalidToken'
        422:
          $ref: '#/components/responses/invalidIdOrder'

  /orders/{idOrder}/state:
    put:
      security:
      - bearerAuth: []
      tags:
        - orders
      summary: El admin puede modificar el estado de un pedido
      parameters:
        - $ref: '#/components/parameters/idOrder'
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/modifyOrderState'
        required: true
      responses:
        200:
          $ref: '#/components/responses/modifyOrderState'
        400:
          $ref: '#/components/responses/invalidState'
        401:
          $ref: '#/components/responses/invalidToken'
        403:
          $ref: '#/components/responses/adminValidation'
        422:
          $ref: '#/components/responses/invalidIdOrder'

#PAYMENTS

  /payments:
    get:
      security:
      - bearerAuth: []
      tags:
        - paymentMethods
      summary: El admin puede listar los metodos de pago
      responses:
        200:
          $ref: '#/components/responses/listPayments'
        401:
          $ref: '#/components/responses/invalidToken'
        403:
          $ref: '#/components/responses/adminValidation'
    post:
      security:
      - bearerAuth: []
      tags:
        - paymentMethods
      summary: El admin puede agregar un metodo de pago
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/newPayment'
        required: true
      responses:
        201:
          $ref: '#/components/responses/newPayment'
        400:
          $ref: '#/components/responses/newPaymentError'
        401:
          $ref: '#/components/responses/invalidToken'
        403:
          $ref: '#/components/responses/adminValidation'

  /payments/{idPayment}:
    put:
      security:
      - bearerAuth: []
      tags:
        - paymentMethods
      summary: El admin puede modificar un metodo de pago
      parameters:
        - $ref: '#/components/parameters/idPayment'
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/newPayment'
        required: true
      responses:
        200:
          $ref: '#/components/responses/modifyPayment'
        400:
          $ref: '#/components/responses/newPaymentError'
        401:
          $ref: '#/components/responses/invalidToken'
        403:
          $ref: '#/components/responses/adminValidation'
    delete:
      security:
      - bearerAuth: []
      tags:
        - paymentMethods
      summary: El admin puede eliminar un metodo de pago
      parameters:
        - $ref: '#/components/parameters/idPayment'
      responses:
        200:
          $ref: '#/components/responses/deletePayment'
        400:
          $ref: '#/components/responses/newPaymentError'
        401:
          $ref: '#/components/responses/invalidToken'
        403:
          $ref: '#/components/responses/adminValidation'

components:

  responses:

  #USER

    userCreated:
      description: Usuario creado con exito
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                example: Usuario creado con exito, su id es 1
    
    userRegisterValidation1:
      description: Tiene que ingresar datos en todos los campos
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                example: Tiene que ingresar todos los datos para poder registrarse

    userRegisterValidation2:
      description: El email ya esta en uso
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                example: El email ya se encuentra en uso

    userLogin:
      description: Ingreso correctamente
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                example: Ingreso correctamente
              token:
                type: string
                example: token

    userLoginInvalidEmail: 
      description: Email no existente
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                example: El email no pertenece a ninguna cuenta

    userLoginInvalidPassword:
      description: La contraseña no coincide con el usuario
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                example: La contraseña no coincide con el email

    changeRolUser:
      description: Usuario modificado a admin
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                example: Usuario modificado a admin

    verifyUserDisabled: 
      description: Su usuario se encuentra deshabilitado
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                example: Su usuario se encuentra deshabilitado

    invalidUserId:
      description: El id no pertenece a un usuario
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                example: El id del usuario no pertenece a un usuario

    unauthorizedIdUser:
      description: El id no pertenece a su usuario
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                example: No puede puede modificar otro usuario que no sea el suyo

    addressList:
      description: Listado de las direcciones del usuario
      content:
        application/json:
          schema:
            type: array
            items:                
              $ref: '#/components/schemas/addressList'

    newAddress:
      description: Direccion agregada con exito
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                example: Direccion agregada con exito

    addressValidation:
      description: No ingreso ninguna direccion
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                example: Tiene que ingresar una direccion

    disabledUSer:
      description: Puede deshabilitar o habilitar un usuario
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                example: Ususario modificado

    adminValidation:
      description: Solo el admin puede realizar esa accion
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                example: Solo el administrador puede realizar esa accion

    invalidToken:
      description: El token ingresado es invalido
      content:
        application/json:
          schema:
            type: object
          examples:
            Token invalido:
              value:
                msg: Token invalido
            Usuario deshabilitado:
              value:
                msg: El usuario se encuentra deshabilitado

  #PRODUCTS

    listProducts:
      description: Listado de productos
      content:
        application/json:
          schema:
            type: array
            items:                
              $ref: '#/components/schemas/listProducts'

    productAdd:
      description:  Producto agregago
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                example: Producto agregado

    productAddValidation:
      description: No puede agregar productos repetidos
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                example: No puede agregar productos repetidos

    invalidProductId:
      description: El id no pertenece a un producto
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                example: El id indicado no pertenece a un producto

    productDelete:
      description:  Producto eliminado
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                example: Producto eliminado

    productNewPrice:
      description:  Producto modificado
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                example: Precio del producto actualizado

  #ORDERS

    listOrders:
      description: Listado de pedidos que realizo el usuario
      content:
        application/json:
          schema:
            type: array
            items:                
              $ref: '#/components/schemas/listOrders'

    ordertAdd:
      description: Pedido agregado
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                example: Pedido agregado

    invalidDataOrder:
      description: informacion invalida
      content:
        application/json:
          schema:
            type: object
          examples:
            Direccion no seleccionada:
              value:
                msg: Tiene que seleccionar una direccion
            Direccion invalida:
              value: 
                msg: Tiene que ingresar el id de una direccion correspondiente a su usuario
            Metodo de pago no seleccionado:
              value:
                msg: No ingreso un metodo de pago valido
            Detalle no indicado:
              value:
                msg: Tiene que ingresar el detalle de la compra

    modifyOrder:
      description: Pedido actualizado
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                example: Pedido actualizado

    modifyOrderValidation:
      description: No se puede modificar el pedido
      content:
        application/json:
          schema:
            type: object
          examples:
            Pedido invalido:
              value:
                msg: No puede modificar un pedido que no sea suyo
            Pedido ya confirmado:
              value: 
                msg: El pedido ya no se puede modificar

    modifyOrderConfirmation:
      description: Estado modificado a confirmado, ya no lo puede modificar
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                example: Estado modificado a confirmado, ya no lo puede modificar

    invalidIdOrder:
      description: El pedido ya no se puede modificar
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                example: El id indicado no pertenece a un pedido

    modifyOrderState:
      description: Estado modificado a {state}
      content:
        application/json:
          schema:
            type: object
            properties:
                msg:
                  type: string
                  example: Estado modificado a {state}

    invalidState:
      description: Tiene que ingresar un estado valido
      content:
        application/json:
          schema:
            type: object
            properties:
                msg:
                  type: string
                  example: Tiene que ingresar un estado valido

    deleteProductOrder:
      description:  Producto eliminado de la orden
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                example: Producto eliminado de la orden

  #PAYMENT

    listPayments:
      description: Listado de metodos de pago
      content:
        application/json:
          schema:
            type: object
            properties:
              Metodos de pago:
                type: array
                items:
                  properties:
                    id: 
                      type: integer
                      format: int 32
                      description: id del metodo de pago
                    method: 
                      type: string
                      description: nombre del metodo de pago

    newPayment:
      description: Metodo de pago agregado
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                example: Metodo de pago agregado

    newPaymentError:
      description: Tiene que ingresar el metodo a agregar
      content:
        application/json:
          schema:
            type: object
          examples:
            Metodo no ingresado:
              value: 
                msg: Tiene que ingresar el metodo a agregar
            Metodo repetido:
              value: 
                msg: El metodo ingresado ya se encuentra registrado
            Id no encontrado:
              value:
                msg: El id indicado no pertencea a un metodo de pago

    modifyPayment:
      description: Metodo de pago modificado
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                example: Metodo de pago modificado a efectivo

    deletePayment:
      description: Metodo de pago eliminado
      content:
        application/json:
          schema:
            type: object
            properties:
              msg:
                type: string
                example: Metodo de pago eliminado



  parameters:

  #USER

    idUser:
        name: idUser
        in: path
        description: id del usuario
        required: true
        schema:
            type: integer

  #PRODUCTS

    idProduct:
        name: idProduct
        in: path
        description: id del producto
        required: true
        schema:
            type: integer

  #ORDERS

    idOrder:
        name: idOrder
        in: path
        description: id del pedido
        required: true
        schema:
          type: integer

  #PAYMENTS

    idPayment:
      name: idPayment
      in: path
      description: id de metodo de pago
      required: true
      schema:
        type: integer

  schemas:

  #USER

    userRegister:
      type: object
      properties:
        username:
          type: string
          description: usuario
        fisrtName:
          type: string
          description: nombre del usuario
        lastName:
          type: string
          description: apellido del usuario
        email:
          type: string
          description: email del usuario
        phone:
          type: integer
          format: int 32
          description: telefono del usuario
        address:
          type: string
          description: direccion del usuario
        password:
          type: string
          description: contraseña del usuario
        passwordConf:
          type: string
          description: confirmacion de contraseña del usuario

    userLogin:
      type: object
      properties:
        email:
          type: string
          description: email del usuario
        password:
          type: string
          description: contraseña del usuario

    updateUserRol:
      type: object
      properties: 
        admin: 
          type: boolean
          description: rol del usuario

    addressList:
      type: object
      properties:
        id:
          type: integer
          format: int 32
          description: id de de la direccion
        address:
          type: string
          description: direccion
        user_id:
          type: integer
          format: int 32
          description: id del usuario

    newAddress:
      type: object
      properties: 
        address: 
          type: string
          description: nueva direccion

    disabledUser:
      type: object
      properties: 
        disabled: 
          type: boolean
          description: deshabilitar un usuario

  #PRODUCTS

    listProducts:
      type: object
      properties:
        id:
          type: integer
          format: int 32
          description: id del producto
        name:
          type: string
          description: nombre del producto
        price:
          type: integer
          format: int 32
          description: precio del producto

    addProduct:
      type: object
      properties:
        name:
          type: string
          description: nombre del producto
        price:
          type: integer
          description: precio del producto

    modifyPriceProduct:
      type: object
      properties:
        price:
          type: integer
          description: precio del producto

  #ORDERS

    listOrders:
      type: object
      properties:
        id:
          type: integer
          description: id del pedido
        total:
          type: integer
          format: int 32
          description: total del pedido
        date:
          type: string
          description: dia y hora en que se realizo el pedido
        state:
          type: string
          description: estado del pedido
        user_id:
          type: integer
          format: int 32
          description: id del usuario
        payment_id:
          type: integer
          format: int 32
          description: id del metodo de pago
        address_id:
          type: integer
          format: int 32
          description: id de la direccion
        OrdersDetails:
          type: array
          items:
            properties:
              amount: 
                type: integer
                format: int 32
                description: cantidad del producto a comprar
              product_id:
                type: integer
                format: int 32
                description: id del producto

    newOrder:
      type: object
      properties:
        address_id:
          type: integer
          format: int 32
          description: id de la direccion
        payment:
          type: string
          description: nombre del metodo de pago
        details:
          type: array
          items:
            properties:
              amount: 
                type: integer
                format: int 32
                description: cantidad del producto a comprar
              product_id:
                type: integer
                format: int 32
                description: id del producto

    modifyOrder:
      type: object
      properties:
        details:
          type: array
          items:
            properties:
              amount: 
                type: integer
                format: int 32
                description: cantidad del producto a comprar
              product_id:
                type: integer
                format: int 32
                description: id del producto
        address_id:
          type: integer
          format: int 32
          description: id de la direccion
        payment:
          type: string
          description: nombre del metodo de pago

    modifyOrderState:
      type: object
      properties:
        state:
          type: string
          description: estado del pedido

    deleteProductOrder:
      type: object
      properties:
        product_id:
          type: integer
          description: id del producto a eliminar de la orden

  #PAYMENTS

    listPayments:
      type: object
      properties:
        Metodos de pago: 
          type: array
          items:
            properties:
              id: 
                type: integer
                format: int 32
                description: id del metodo de pago
              method: 
                type: string
                description: nombre del metodo de pago

    newPayment:
      type: object
      properties:
        method:
          type: string
          description: Nombre del metodo de pago a agregar

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
